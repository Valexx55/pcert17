//STRINGS

1) El m√©todo isBlank devuelve true si la cadena est√° vac√≠a o contiene 
todo espacios blancos

2) Strings son imutables: si le cambias el valor, se crear automatÌcamente una variable nueva, perservando la orignal
   Esto hace de evitar modificaciones en datos pasados por par·metros
   
   Hacer una clase final evita que pueda heredarse de ella y por tanto, redefinir
   mÈtodos y atributos que pudieran alterar el estado del objeto padre, indirectamente.


---------------------------------------------------------------------
---------------------------------------------------------------------

//CLASES ESTRUCTURA

1) Puedes declarar tantas clases como quieras en un mismo archivo. El requisito es 
que s√≥lo haya una declarada como p√∫blica y coincida con el nombre del fichero

2) No todas las clases deben tener el nombre dentro de su c√≥digo fuente (pregunta trampa)

Pej: puedes tener una clase an√≥nima que implementa una interfaz y funciona sin ese requisito

	Runnable r = new Runnable(){ public void run(){
	  System.out.print("Do nothing!");
	  }
	};
	r.run();
	
	Aqu√≠ r, es una referencia a la clase, pero esa clase, no tiene nombre dentro de ella
	

3) El caracter _ no puede formar parte del nombre de una clase

4) Ninguna palabra clave de Java empieza por may√∫scula

5) Ninguna clase a top level puede declarse como protected. S√≠ package protected o public.
---------------------------------------------------------------------
---------------------------------------------------------------------

//OPERADORES

1) x = y--;  Primero se asigna. Despu√©s se decrementa. 
			 x es mayor que y despu√©s de la ejecuci√≥n de esa instrucci√≥n

---------------------------------------------------------------------
---------------------------------------------------------------------
			 
			 
//SWITCH

1) long, float, duoble, and boolean NO PUEDEN USARSE NUNCA como variable Switch(v)


---------------------------------------------------------------------
---------------------------------------------------------------------

//FOR

1) 	int i ; 
	for ( i = 4, int t = 6; i < 0; i++ ) --> ILEGAL! no puedes declarar e inicializar mezclados
	
	
//TIPOS

Integer.MAX_VALUE+1 = Integer.MIN_VALUE !! --> da la vuelta, alucina :) 


//ENUM

1) No se puede extender de un enum